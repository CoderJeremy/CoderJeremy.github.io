<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Jeremy&#39;s Blog</title>
  
  <subtitle>艰险我奋进，困乏我多情</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://coderjeremy.github.io/"/>
  <updated>2018-09-18T14:15:36.321Z</updated>
  <id>https://coderjeremy.github.io/</id>
  
  <author>
    <name>吴健伟_Jeremy</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>计算机网络概述</title>
    <link href="https://coderjeremy.github.io/2018/09/18/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C/"/>
    <id>https://coderjeremy.github.io/2018/09/18/计算机网络/</id>
    <published>2018-09-18T13:30:01.000Z</published>
    <updated>2018-09-18T14:15:36.321Z</updated>
    
    <content type="html"><![CDATA[<p>[TOC]</p><h2 id="因特网发展的三个阶段"><a href="#因特网发展的三个阶段" class="headerlink" title="因特网发展的三个阶段"></a>因特网发展的三个阶段</h2><h3 id="第一阶段：从单个网络ARPANET向互联网发展的过程"><a href="#第一阶段：从单个网络ARPANET向互联网发展的过程" class="headerlink" title="第一阶段：从单个网络ARPANET向互联网发展的过程"></a>第一阶段：从单个网络ARPANET向互联网发展的过程</h3><p>ARPANET：</p><ul><li>1969年美国国防部创建的第一个分组交换网</li><li>1983年TCP/IP协议成为ARPANET上的标准协议，因特网诞生</li><li>1990年关闭<h3 id="第二阶段：三级结构的因特网"><a href="#第二阶段：三级结构的因特网" class="headerlink" title="第二阶段：三级结构的因特网"></a>第二阶段：三级结构的因特网</h3>1985年美国国家科学基金会：NSFNET<br>三级计算机网络：</li></ul><ul><li>主干网</li><li>地区网</li><li>校园网（或企业网）<h3 id="第三阶段：多层次ISP结构因特网"><a href="#第三阶段：多层次ISP结构因特网" class="headerlink" title="第三阶段：多层次ISP结构因特网"></a>第三阶段：多层次ISP结构因特网</h3></li><li>第一层：服务面积最大(一般是国家范围)，拥有高速主干网</li><li>NAP </li><li>第二层：第一层ISP的用户</li><li>第三层：又称本地ISP，拥有本地范围的网络<blockquote><p>ISP: (Internet Service Provider) 互联网服务提供者（商）<br>NAP:网络接入点<strong>NAP</strong> (Network Access Point)：分散主干网流量，又称对等点（peering point）<br>IXP：（Internet eXchange Point）互联网交换点 ，允许两个网络直接相连并交换分组，而不需要再通过第三个网络来转发分组</p></blockquote></li></ul><h2 id="英特网的组成"><a href="#英特网的组成" class="headerlink" title="英特网的组成"></a>英特网的组成</h2><p>因特网的<strong>边缘部分</strong>：由所有连接在因特网上的<strong>主机</strong>组成（通信和资源共享）<br>因特网的<strong>核心部分</strong>：由大量网络和连接这些网络的<strong>路由器（router）</strong>组成，为边缘部分提供服务（连通性和交换）</p><blockquote><p>另一种分法：资源子网，通信子网</p></blockquote><hr><h3 id="边缘部分通信方式："><a href="#边缘部分通信方式：" class="headerlink" title="边缘部分通信方式："></a>边缘部分通信方式：</h3><ol><li>客户服务器方式（C/S）:Client/Server，都是指通信中所涉及的两个应用进程</li></ol><ul><li>客户程序特点：<ul><li>客户程序必须知道服务器程序的地址</li><li>不需要特殊的硬件和复杂的操作系统</li></ul></li><li>服务程序特点：<ul><li>可同时处理多个远地或本地客户的请求</li><li>系统启动后自动调用并一直不断的运行着</li><li>一般需要强大的硬件和高级的操作系统支持</li></ul></li></ul><ol start="2"><li>对等方式（P2P）:Peer to Peer，指两个主机在通信是并不区分哪一个是服务请求方还是服务提供方，本质上看仍是C/S方式，只是P2P中的每一个主机既是客户又是服务器</li></ol><h3 id="核心部分三种交换方式："><a href="#核心部分三种交换方式：" class="headerlink" title="核心部分三种交换方式："></a>核心部分三种交换方式：</h3><blockquote><p>路由器：实现分组交换的关键构建，转发收到的分组<br>交换（switching）按照某种方式动态地分配传输线路的资源</p><ol><li>电路交换：面向连接，三个阶段：建立–&gt;保持–&gt;释放<br> 特点：在通话的全部时间内，通话的两个用户始终占用端到端的通信资源<ul><li>通话前先拨号建立连接（经过一个或多个交换机）</li><li>通话过程中，通信双方一直占用所建立的连接</li><li>通话结束后，挂机释放连接</li></ul></li></ol></blockquote><ol start="2"><li><p>报文交换</p></li><li><p>分组交换</p><ul><li>在发送端，先把较长的报文划分成较短的固定长度的数据端</li><li>每一个数据段前面添加上首部构成分组</li><li>依次把各分组发送到接收端</li><li><p>接收端剥去首部，抽出数据部分，还原成报文</p><blockquote><p>每一个分组的首部都含有地址等控制信息<br>结点交换机根据收到的分组的首部中的地址信息，把分组转发到下一个结点交换机</p></blockquote><p>路由器处理分组的过程：</p></li><li>把收到的分组先放入缓存；</li><li>查找转发表，找出到某个目的地址应从哪个端口转发；</li><li><p>把分组送到适当的端口转发出去</p><p>优点：</p></li><li>高效    动态分配传输带宽，对通信链路是逐段占用。 </li><li>灵活    以分组为传送单位和查找路由。</li><li>迅速    不必先建立连接就能向其他主机发送分组。</li><li><p>可靠    保证可靠性的网络协议；分布式的路由选择协议使网络有很好的生存性。   </p><p>缺点：</p></li><li>分组在各结点存储转发时需要排队，这就会造成一定的时延。</li><li>分组必须携带的首部（里面有必不可少的控制信息）也造成了一定的开销。</li></ul></li></ol><h2 id="计算机网络分类"><a href="#计算机网络分类" class="headerlink" title="计算机网络分类"></a>计算机网络分类</h2><p>1.按照网络的作用分类：<br>​    - 广域网WAN（Wide Area Network）<br>​    - 城域网MAN (Metropolitan Area Network)<br>​    - 局域网LAN (Local Area Network)<br>​    - 个人区域网PAN (Personal Area Network)<br>2.按照网络的使用者分类：<br>​    - 公用网（public network）<br>​    - 专用网 (private network)<br>3.原来把用户接入到互联网的网络：接入网 AN(Access Network)</p><h3 id="计算机网络的性能"><a href="#计算机网络的性能" class="headerlink" title="计算机网络的性能"></a>计算机网络的性能</h3><ol><li>速率<br> 数据的传送速率，也叫数据率或比特率，单位bit/s（比特每秒）</li><li>带宽<ul><li>某个信号具有频带宽度，信号的带宽是指该信号说包含的各种不同频率成分说占据的频率范围，单位赫兹HZ</li><li>计算机网络中，带宽用来表示网络中某通道传送数据的能力，单位bit/s</li></ul></li><li>吞吐量<br> 表示在单位时间内通过某个网络（或信道、接口）的实际数据量</li><li><p>时延</p><ul><li><p>发送时延<br>主机或路由器发送数据帧所需要的时间<br>​    发送时延 = 数据帧长度 / 发送速率</p></li><li><p>传播时延<br>电磁波在信道中传播一定的距离需要花费的时间<br>​    传播时延  = 信道长度  /  电磁波在信道上的传播速率</p></li><li><p>处理时延<br>主机或路由器在收到分组时需要花费时间处理</p></li><li><p>排队时延<br>分组在经过网络传输时，需要经过许多路由器，要在路由器中排队等待处理</p><blockquote><p>总时延 = 发送时延 + 传播时延 + 处理时延 + 排队时延</p></blockquote></li></ul></li><li><p>时延带宽积<br> 时延宽带积 = 传播时延 x 带宽 （以比特为单位的链路长度）</p></li><li>往返时间RTT（Round-Trip Time）<br> 发送时长 = 数据长度 / 发送速率<br> 有效数据率 = 数据长度 / （发送时间 + RTT）</li><li>利用率<br> 信道利用率和网络利用率，过高会产生非常大的时延</li></ol><h2 id="计算机网络的体系结构"><a href="#计算机网络的体系结构" class="headerlink" title="计算机网络的体系结构"></a>计算机网络的体系结构</h2><h3 id="实体、协议、服务和服务访问点"><a href="#实体、协议、服务和服务访问点" class="headerlink" title="实体、协议、服务和服务访问点"></a>实体、协议、服务和服务访问点</h3><ol><li>实体：<ul><li>表示任何可发送或接收信息的硬件或软件进程</li><li>对等实体peer entity</li></ul></li><li>协议（protocol）：<ul><li>控制两个对等实体进行通信的规则、标准或约定的集合</li><li>在协议的控制下，两个对等实体间的通信使得本层能够向上一层提供服务。要实现本层协议，还需要使用下层所提供的服务</li><li>网络协议的组成要素<ul><li>语法：数据与控制信息的结构或格式</li><li>语义：需要发出何种控制信息，完成何种动作以及做出何种响应</li><li>同步：事件实现顺序的详细说明</li></ul></li></ul></li><li><p>协议与服务：</p><ul><li>本层的服务用户只能看见服务而无法看见下面的协议。下面的协议对上面的服务用户是透明的</li><li>协议是”水平的“，协议是控制对等实体之间通信的规则</li><li>服务是”垂直的“，服务是由下层向上层通过层间接口提供的<blockquote><p>并非在一个层内完成的全部功能都称为服务，只有能够被高一层的实体看得见的功能才能称为服务<br>上层使用下层所提供的服务必须通过与下层交换一些命令，这些命令在OSI中称为服务原语</p></blockquote></li></ul></li><li><p>服务访问点 SAP（Service Access Point）：</p><ul><li>同一系统相邻两层实体进行交互的地方称为SAP</li><li>服务数据单元SDU(Service Data Unit)</li></ul></li></ol><h3 id="OSI-RM体系结构"><a href="#OSI-RM体系结构" class="headerlink" title="OSI/RM体系结构"></a>OSI/RM体系结构</h3><table><thead><tr><th style="text-align:center">层次</th><th style="text-align:center">名称</th><th style="text-align:left">作用</th></tr></thead><tbody><tr><td style="text-align:center">第七层</td><td style="text-align:center">应用层(applicationg layer)</td><td style="text-align:left">约定请求消息和应答消息；包括所用应用方面的协议；不同系统之间的文件传输方式不同，但表示的形式必须一致</td></tr><tr><td style="text-align:center">第六层</td><td style="text-align:center">表示层(presentation layer)</td><td style="text-align:left">表示层关心的是语法和语义；对相关的数据的描述采用抽象的定义</td></tr><tr><td style="text-align:center">第五层</td><td style="text-align:center">会话层(session layer)</td><td style="text-align:left">建立有关会话的机制，是双向的还是单向对话或重新建立会话</td></tr><tr><td style="text-align:center">第四层</td><td style="text-align:center">传输层(transport layer)</td><td style="text-align:left">提供端到端的通路，应用到应用的通路</td></tr><tr><td style="text-align:center">第三层</td><td style="text-align:center">网络层(network layer)</td><td style="text-align:left">提供主机到主机的通路，其间可能存在多条通路，网络层将实现的功能包括<br>- 选择路由<br>- 拥塞控制<br>- 协议的转换<br>- 分段和重组<br>- 对用户的分组、字符等统计</td></tr><tr><td style="text-align:center">第二层</td><td style="text-align:center">数据连路层(data link layer)</td><td style="text-align:left">提供点到点的可靠传输，通常需把数据分成帧，并且保证帧的正确发送和接收<br>- 识别帧的标志<br>- 帧的发送和接收，需校验、确认<br>- 发送方在超时或收到否定性确认后，要重发<br>- 重复帧要丢弃<br>在共享网络中，需解决信道共享问题等——mac层</td></tr><tr><td style="text-align:center">第一层</td><td style="text-align:center">物理层(physical layer)</td><td style="text-align:left">与传输媒体的接口，完成传输媒体上的信号与二进制数据间的转换</td></tr></tbody></table><blockquote><p>会话层及以下关心的是信息的传输<br>表示层及以上关心的是信息的理解</p></blockquote><h3 id="TCP-IP的体系结构"><a href="#TCP-IP的体系结构" class="headerlink" title="TCP/IP的体系结构"></a>TCP/IP的体系结构</h3><table><thead><tr><th style="text-align:center">层次</th><th style="text-align:center">名称</th><th style="text-align:left">作用</th></tr></thead><tbody><tr><td style="text-align:center">第五层</td><td style="text-align:center">应用层</td><td style="text-align:left">通过应用进程间的交互来完成特定网络应用，包括HTTP,SMTP,FTP等</td></tr><tr><td style="text-align:center">第四层</td><td style="text-align:center">传输层</td><td style="text-align:left">负责向两台主机中进程之间的通信提供通用的数据传输服务<br>TCP（Transmisson Control Protocol）：面向连接的，数据传输的单位是报文段，提供可靠的交付<br>UDP(User Datagram Protocol)：无连接的，数据传输的单位是用户数据报，不保证提供可靠的交付，只能提供尽最大努力交付</td></tr><tr><td style="text-align:center">第三层</td><td style="text-align:center">网络层</td><td style="text-align:left">为分组交换网上的不同主机提供通信服务<br>把传输层产生的报文段或用户数据报封装成分组或包进行传送<br>选择合适路由<br>网际协议IP和多路由选择协议</td></tr><tr><td style="text-align:center">第二层</td><td style="text-align:center">数据链路层</td><td style="text-align:left">将网络层交下来的IP数据包组装成帧，每一帧包括数据和必要的控制信息</td></tr><tr><td style="text-align:center">第一层</td><td style="text-align:center">物理层</td><td style="text-align:left">透明的传送比特流</td></tr></tbody></table><blockquote><p>传递信息所利用的一些物理媒体，如双绞线、同轴电缆等，并不在物理层协议之内而是在物理层协议之下，因此物理媒体也可当作第0层</p></blockquote><h3 id="数据传递过程"><a href="#数据传递过程" class="headerlink" title="数据传递过程"></a>数据传递过程</h3><blockquote><p>PDU(Protocol Data Unit)：对等层次间传送的数据单位</p></blockquote><p>主机1</p><ol start="5"><li>应用进程数据先传送到应用层,加上应用层首部，称为PDU</li><li>应用层PDU再传送到传输层，加上传输层首部，成为传输层报文</li><li>传输层报文再传送到网络层，加上网络层首部，成为IP数据报或分组</li><li>IP数据报再传送到数据链路层， 加上链路层首部和尾部，成为数据链路层帧</li><li>数据链路层帧再传送到物理层，最下面的物理层把比特流传送到物理媒体</li></ol><p>电信号或光信号在物理媒体中传播从发送端物理层传送到接收端物理层</p><ol><li>物理层接收到比特流，上交给数据链路层</li><li>数据链路层剥去帧首部和帧尾部，取出数据部分，上交给网络层</li><li>网络层剥去首部，取出数据部分上交给传输层</li><li>传输层剥去首部，取出数据部分上交给应用层</li><li>应用层剥去首部，取出应用程序数据上交给应用进程<br>主机2</li></ol>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;[TOC]&lt;/p&gt;
&lt;h2 id=&quot;因特网发展的三个阶段&quot;&gt;&lt;a href=&quot;#因特网发展的三个阶段&quot; class=&quot;headerlink&quot; title=&quot;因特网发展的三个阶段&quot;&gt;&lt;/a&gt;因特网发展的三个阶段&lt;/h2&gt;&lt;h3 id=&quot;第一阶段：从单个网络ARPANET向互联
      
    
    </summary>
    
      <category term="计算机网络笔记" scheme="https://coderjeremy.github.io/categories/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%E7%AC%94%E8%AE%B0/"/>
    
    
      <category term="计算机网络" scheme="https://coderjeremy.github.io/tags/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C/"/>
    
  </entry>
  
  <entry>
    <title>NexT 6 添加字数和阅读时间统计</title>
    <link href="https://coderjeremy.github.io/2018/09/14/NexT%206%20%E6%B7%BB%E5%8A%A0%E5%AD%97%E6%95%B0%E5%92%8C%E9%98%85%E8%AF%BB%E6%97%B6%E9%97%B4%E7%BB%9F%E8%AE%A1/"/>
    <id>https://coderjeremy.github.io/2018/09/14/NexT 6 添加字数和阅读时间统计/</id>
    <published>2018-09-14T14:04:25.000Z</published>
    <updated>2018-09-14T14:13:07.576Z</updated>
    
    <content type="html"><![CDATA[<h2 id="打开hexo目录，运行git-bush，安装插件"><a href="#打开hexo目录，运行git-bush，安装插件" class="headerlink" title="打开hexo目录，运行git bush，安装插件"></a>打开hexo目录，运行git bush，安装插件</h2><p><code>$ npm install hexo-symbols-count-time --save</code></p><h2 id="修改博客配置文件，添加以下代码"><a href="#修改博客配置文件，添加以下代码" class="headerlink" title="修改博客配置文件，添加以下代码"></a>修改博客配置文件，添加以下代码</h2><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">symbols_count_time:</span></span><br><span class="line"><span class="attr">symbols:</span> <span class="literal">true</span></span><br><span class="line"><span class="attr">time:</span> <span class="literal">true</span></span><br><span class="line"><span class="attr">total_symbols:</span> <span class="literal">true</span></span><br><span class="line"><span class="attr">total_time:</span> <span class="literal">true</span></span><br></pre></td></tr></table></figure><h2 id="修改主题配置文件，搜索symbols-count-time，快速定位，修改成以下代码"><a href="#修改主题配置文件，搜索symbols-count-time，快速定位，修改成以下代码" class="headerlink" title="修改主题配置文件，搜索symbols_count_time，快速定位，修改成以下代码"></a>修改主题配置文件，搜索symbols_count_time，快速定位，修改成以下代码</h2><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">symbols_count_time:</span></span><br><span class="line"><span class="attr">separated_meta:</span> <span class="literal">true</span></span><br><span class="line"><span class="attr">item_text_post:</span> <span class="literal">true</span></span><br><span class="line"><span class="attr">item_text_total:</span> <span class="literal">false</span></span><br><span class="line"><span class="attr">awl:</span> <span class="number">4</span></span><br><span class="line"><span class="attr">wpm:</span> <span class="number">275</span></span><br></pre></td></tr></table></figure><h2 id="重启服务"><a href="#重启服务" class="headerlink" title="重启服务"></a>重启服务</h2>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;打开hexo目录，运行git-bush，安装插件&quot;&gt;&lt;a href=&quot;#打开hexo目录，运行git-bush，安装插件&quot; class=&quot;headerlink&quot; title=&quot;打开hexo目录，运行git bush，安装插件&quot;&gt;&lt;/a&gt;打开hexo目录，运行git
      
    
    </summary>
    
      <category term="Hexo搭建" scheme="https://coderjeremy.github.io/categories/Hexo%E6%90%AD%E5%BB%BA/"/>
    
    
      <category term="Hexo" scheme="https://coderjeremy.github.io/tags/Hexo/"/>
    
      <category term="NexT" scheme="https://coderjeremy.github.io/tags/NexT/"/>
    
  </entry>
  
  <entry>
    <title>如何给Hexo正确添加RSS订阅</title>
    <link href="https://coderjeremy.github.io/2018/09/09/hexo-rss/"/>
    <id>https://coderjeremy.github.io/2018/09/09/hexo-rss/</id>
    <published>2018-09-09T13:36:23.000Z</published>
    <updated>2018-09-14T14:01:03.933Z</updated>
    
    <content type="html"><![CDATA[<h1 id="安装feed插件"><a href="#安装feed插件" class="headerlink" title="安装feed插件"></a>安装feed插件</h1><ol><li>本地hexo目录下运行<code>git bash here</code></li><li>输入指令<code>npm install hexo-generator-feed</code></li><li>等待安装完成</li></ol><h1 id="添加配置文件"><a href="#添加配置文件" class="headerlink" title="添加配置文件"></a>添加配置文件</h1><ol><li><p>打开hexo目录下配置文件_config.yml，末尾添加以下配置</p><blockquote><pre><code># Extensions## Plugins: http://hexo.io/plugins/#RSS订阅plugin:- hexo-generator-feed#Feed Atomfeed:type: atompath: atom.xmllimit: 20</code></pre></blockquote></li><li><p>打开主题配置文件_config.yml,搜索rss，添加配置</p></li></ol><p><code>rss: /atom.xml</code></p><h1 id="发布"><a href="#发布" class="headerlink" title="发布"></a>发布</h1><p><code>hexo s</code></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;安装feed插件&quot;&gt;&lt;a href=&quot;#安装feed插件&quot; class=&quot;headerlink&quot; title=&quot;安装feed插件&quot;&gt;&lt;/a&gt;安装feed插件&lt;/h1&gt;&lt;ol&gt;
&lt;li&gt;本地hexo目录下运行&lt;code&gt;git bash here&lt;/code&gt;&lt;/l
      
    
    </summary>
    
      <category term="Hexo搭建" scheme="https://coderjeremy.github.io/categories/Hexo%E6%90%AD%E5%BB%BA/"/>
    
    
      <category term="Hexo" scheme="https://coderjeremy.github.io/tags/Hexo/"/>
    
      <category term="rss" scheme="https://coderjeremy.github.io/tags/rss/"/>
    
  </entry>
  
  <entry>
    <title>Hello World</title>
    <link href="https://coderjeremy.github.io/2018/09/09/hello-world/"/>
    <id>https://coderjeremy.github.io/2018/09/09/hello-world/</id>
    <published>2018-09-08T16:12:44.000Z</published>
    <updated>2018-09-09T02:07:54.955Z</updated>
    
    <content type="html"><![CDATA[<center><br><br>姓名：吴健伟/Jeremy<br><br>生日：1997/03/20<br><br>性别：♂<br><br>就读：山东科技大学（SDUST）<br><br>特征：轻微强迫症、积极废人之一<br><br>爱好：Coding、摄影<br><br>理想：用心做更好用的系统和软件，超越ios的用户体验<br><br>座右铭：Enjoy what you love and it will give all you want<br><br>Mail：<a href="mailto:wujianwei0320@qq.com" target="_blank" rel="noopener">wujianwei0320@qq.com</a> / <a href="mailto:wujianwei0320@gmail.com" target="_blank" rel="noopener">wujianwei0320@gmail.com</a><br><br>QQ ：380576406<br><br>Wechat : wujianwei97<br><img src="https://i.imgur.com/OBmthZG.jpg" width="150" height="150"><br></center>]]></content>
    
    <summary type="html">
    
      
      
        &lt;center&gt;&lt;br&gt;&lt;br&gt;姓名：吴健伟/Jeremy&lt;br&gt;&lt;br&gt;生日：1997/03/20&lt;br&gt;&lt;br&gt;性别：♂&lt;br&gt;&lt;br&gt;就读：山东科技大学（SDUST）&lt;br&gt;&lt;br&gt;特征：轻微强迫症、积极废人之一&lt;br&gt;&lt;br&gt;爱好：Coding、摄影&lt;br&gt;&lt;br&gt;理想：
      
    
    </summary>
    
      <category term="杂聊" scheme="https://coderjeremy.github.io/categories/%E6%9D%82%E8%81%8A/"/>
    
    
      <category term="我" scheme="https://coderjeremy.github.io/tags/%E6%88%91/"/>
    
  </entry>
  
</feed>
